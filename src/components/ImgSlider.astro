---
const { images = [] } = Astro.props;
---

<div class="container" id="imgSlider" data-images={JSON.stringify(images)}>
  <button id="prevBtn">⬅</button>
  <div class="image-container">
    <img
      src={images[0] ?? ""}
      alt="Main image"
      class="main-image"
      id="mainImage"
    />
    <img
      src={images[1] ?? images[0] ?? ""}
      alt="Background image"
      class="background-image"
      id="bgImage"
    />
  </div>
  <button id="nextBtn">➡</button>
</div>
<div id="fullscreenOverlay" class="fullscreen-overlay" style="display:none;">
  <span id="closeOverlay" class="close-btn">&times;</span>
  <button id="fsPrevBtn" class="fs-btn">⬅</button>
  <img id="fsImage" class="fullscreen-image" src="" alt="Fullscreen image" />
  <button id="fsNextBtn" class="fs-btn">➡</button>
</div>

<style scoped>
  .container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap; /* allows wrapping on small screens */
  }

  .image-container {
    position: relative;
    margin: 2rem auto;
    width: 100%;
    max-width: 20rem;
    aspect-ratio: 1 / 1; /* maintain square shape */
  }

  .main-image,
  .background-image {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    object-fit: cover;
    transition:
      transform 0.4s ease,
      opacity 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }

  .background-image {
    position: absolute;
    top: 5%;
    left: 5%;
    z-index: -1;
    opacity: 0.9;
  }

  .main-image:hover {
    transform: translateY(-5px);
  }

  /* Fullscreen overlay */
  .fullscreen-overlay {
    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    flex-direction: row;
    padding: 1rem;
  }

  .fullscreen-image {
    width: 90%;
    height: auto;
    max-height: 90vh;
    border-radius: 0.5rem;
    object-fit: contain;
  }

  .close-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 2rem;
    color: white;
    cursor: pointer;
    z-index: 10001;
  }

  .fs-btn {
    font-size: 2rem;
    color: white;
    background: none;
    border: none;
    cursor: pointer;
    z-index: 10001;
    user-select: none;
  }

  /* === Responsive Adjustments === */
  @media (max-width: 768px) {
    .container {
      flex-direction: column;
      gap: 0.5rem;
    }

    .image-container {
      max-width: 90%;
      aspect-ratio: 1 / 1;
    }

    button {
      font-size: 1.25rem;
    }

    .fullscreen-overlay {
      flex-direction: column;
      justify-content: center;
      padding: 0.5rem;
    }

    .fullscreen-image {
      width: 95%;
      max-height: 70vh;
    }

    .fs-btn {
      font-size: 1.5rem;
      margin: 0.5rem;
    }

    .close-btn {
      font-size: 2rem;
    }
  }

  @media (max-width: 480px) {
    .background-image {
      top: 10px;
      left: 10px;
    }

    .main-image:hover {
      transform: none;
    }
  }
</style>
<script type="module" is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    const container = document.getElementById("imgSlider");
    const images = JSON.parse(container.dataset.images || "[]");
    let index = 0;

    const mainImage = document.getElementById("mainImage");
    const bgImage = document.getElementById("bgImage");
    const prevBtn = document.getElementById("prevBtn");
    const nextBtn = document.getElementById("nextBtn");

    function updateImages() {
      mainImage.src = images[index];
      mainImage.alt = `Image ${index + 1}`;
      bgImage.src = images[(index + 1) % images.length] ?? images[0] ?? "";
      bgImage.alt = `Background image ${((index + 1) % images.length) + 1}`;
    }

    prevBtn?.addEventListener("click", () => {
      index = (index - 1 + images.length) % images.length;
      updateImages();
    });

    nextBtn?.addEventListener("click", () => {
      index = (index + 1) % images.length;
      updateImages();
    });

    updateImages();

    //modal
    const overlay = document.getElementById("fullscreenOverlay");
    const fsImage = document.getElementById("fsImage");
    const closeOverlay = document.getElementById("closeOverlay");
    const fsPrevBtn = document.getElementById("fsPrevBtn");
    const fsNextBtn = document.getElementById("fsNextBtn");

    function openFullscreen(idx) {
      fsImage.src = images[idx];
      fsImage.alt = `Fullscreen image ${idx + 1}`;
      overlay.style.display = "flex";
      document.body.style.overflow = "hidden";
    }
    function closeFullscreen() {
      overlay.style.display = "none";
      document.body.style.overflow = "";
    }
    function updateFsImage(idx) {
      fsImage.src = images[idx];
      fsImage.alt = `Fullscreen image ${idx + 1}`;
    }

    mainImage.addEventListener("click", () => {
      openFullscreen(index);
    });

    closeOverlay.addEventListener("click", closeFullscreen);

    fsPrevBtn.addEventListener("click", () => {
      index = (index - 1 + images.length) % images.length;
      updateFsImage(index);
    });

    fsNextBtn.addEventListener("click", () => {
      index = (index + 1) % images.length;
      updateFsImage(index);
    });

    // Optional: close overlay on ESC key
    document.addEventListener("keydown", (e) => {
      if (overlay.style.display === "flex") {
        if (e.key === "Escape") closeFullscreen();
        if (e.key === "ArrowLeft") fsPrevBtn.click();
        if (e.key === "ArrowRight") fsNextBtn.click();
      }
    });
  });
</script>
